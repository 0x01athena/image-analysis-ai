// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  analyses  Analysis[]
  
  @@map("users")
}

model Analysis {
  id          String   @id @default(cuid())
  userId      String
  imagePath   String
  imageName   String
  imageSize   Int
  mimeType    String
  status      AnalysisStatus @default(PENDING)
  results     Json?
  error       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("analyses")
}

model BatchAnalysis {
  id          String   @id @default(cuid())
  userId      String
  batchName   String
  status      BatchStatus @default(PENDING)
  totalFiles  Int
  processedFiles Int    @default(0)
  results     Json?
  error       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("batch_analyses")
}

enum AnalysisStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum BatchStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  PARTIALLY_COMPLETED
}
